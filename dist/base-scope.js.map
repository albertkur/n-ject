{"version":3,"file":"base-scope.js","sourceRoot":"","sources":["../src/base-scope.ts"],"names":[],"mappings":"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","sourcesContent":["import { given } from \"@nivinjoseph/n-defensive\";\nimport { Scope } from \"./scope\";\nimport { ScopeType } from \"./scope-type\";\nimport { Lifestyle } from \"./lifestyle\";\nimport \"@nivinjoseph/n-ext\";\nimport { ApplicationException, InvalidOperationException, ObjectDisposedException } from \"@nivinjoseph/n-exception\";\nimport { ComponentRegistry } from \"./component-registry\";\nimport { ComponentRegistration } from \"./component-registration\";\nimport { Uuid, Disposable } from \"@nivinjoseph/n-util\";\nimport { ReservedKeys } from \"./reserved-keys\";\n\n// internal\nexport abstract class BaseScope implements Scope\n{\n    private readonly _id: string;\n    private readonly _scopeType: ScopeType;\n    private readonly _componentRegistry: ComponentRegistry;\n    private readonly _parentScope: Scope;\n    private readonly _scopedInstanceRegistry: {[index: string]: object} = {};\n    private _isBootstrapped = false;\n    private _isDisposed = false;\n\n    \n    public get id(): string { return this._id; }\n    public get scopeType(): ScopeType { return this._scopeType; }\n    \n    protected get componentRegistry(): ComponentRegistry { return this._componentRegistry; }\n    protected get isBootstrapped(): boolean { return this._isBootstrapped; }\n    protected get isDisposed(): boolean { return this._isDisposed; }\n    \n\n\n    protected constructor(scopeType: ScopeType, componentRegistry: ComponentRegistry, parentScope: Scope)\n    {\n        given(scopeType, \"scopeType\").ensureHasValue();\n        given(componentRegistry, \"componentRegistry\").ensureHasValue();\n        given(parentScope, \"parentScope\")\n            // @ts-ignore\n            .ensure(t => scopeType === ScopeType.Child ? parentScope != null : parentScope == null,\n            \"cannot be null if scope is a child scope and has to be null if scope is root scope\");\n\n        this._id = Uuid.create();\n        this._scopeType = scopeType;\n        this._componentRegistry = componentRegistry;\n        this._parentScope = parentScope;\n    }\n\n\n    public resolve<T extends object>(key: string): T\n    {\n        if (this._isDisposed)\n            throw new ObjectDisposedException(this);\n        \n        if (!this.isBootstrapped)\n            throw new InvalidOperationException(\"resolve\");    \n        \n        given(key, \"key\").ensureHasValue().ensure(t => !t.isEmptyOrWhiteSpace());\n\n        key = key.trim();\n        if (key === ReservedKeys.serviceLocator)\n            return this as unknown as T;\n        \n        let registration = this._componentRegistry.find(key);\n        if (!registration)\n            throw new ApplicationException(\"No component with key '{0}' registered.\".format(key));\n\n        return this.findInstance(registration) as T;\n    }\n    \n    public async dispose(): Promise<void>\n    {\n        if (this._isDisposed)\n            return;\n        \n        this._isDisposed = true;\n        \n        let disposables;\n        \n        try \n        {\n            disposables = Object.keys(this._scopedInstanceRegistry)\n                .map(t => this._scopedInstanceRegistry[t])\n                .filter(t => !!(<Disposable>t).dispose)\n                .map(t => ({ type: (<Object>t).getTypeName(), promise: (<Disposable>t).dispose() }));\n        }\n        catch (error)\n        {\n            console.error(`Error: Failed to dispose one or more scoped components.`);\n            console.error(error);\n            return;\n        }\n        \n        for (const disposable of disposables)\n        {\n            try \n            {\n                await disposable.promise;\n            }\n            catch (error)\n            {\n                console.error(`Error: Failed to dispose component of type '${disposable.type}'.`);\n                console.error(error);\n            }\n        }\n    }\n    \n    public abstract createScope(): Scope;\n    \n    \n    protected bootstrap(): void\n    {\n        this._isBootstrapped = true;\n    }\n\n    private findInstance(registration: ComponentRegistration): object\n    {\n        if (registration.lifestyle === Lifestyle.Instance)\n        {\n            return registration.component; \n        }    \n        else if (registration.lifestyle === Lifestyle.Singleton)\n        {\n            if (this.scopeType === ScopeType.Child)\n                return this._parentScope.resolve(registration.key);\n            else\n                return this.findScopedInstance(registration);\n        }\n        else if (registration.lifestyle === Lifestyle.Scoped)\n        {\n            if (this.scopeType === ScopeType.Root)\n                throw new ApplicationException(\"Cannot resolve component '{0}' with scoped lifestyle from root scope.\"\n                    .format(registration.key));\n            else\n                return this.findScopedInstance(registration);\n        }\n        else\n        {\n            return this.createInstance(registration);\n        }\n    }\n\n    private findScopedInstance(registration: ComponentRegistration): object\n    {\n        if (this._scopedInstanceRegistry[registration.key])\n            return this._scopedInstanceRegistry[registration.key];\n        else\n        {\n            const instance = this.createInstance(registration);\n            this._scopedInstanceRegistry[registration.key] = instance;\n            registration.aliases.forEach(t => this._scopedInstanceRegistry[t] = instance);\n            return instance;\n        }\n    }\n\n    private createInstance(registration: ComponentRegistration): object\n    {\n        const dependencyInstances = [];\n        for (const dependency of registration.dependencies)\n        {        \n            if (dependency === ReservedKeys.serviceLocator)\n            {\n                dependencyInstances.push(this);\n                continue;\n            }\n            \n            const dependencyRegistration = this._componentRegistry.find(dependency);\n            if (!dependencyRegistration)\n                throw new ApplicationException(\"Dependency '{0}' of component '{1}' not registered.\"\n                    .format(dependency, registration.key));\n\n            dependencyInstances.push(this.findInstance(dependencyRegistration));\n        }\n        return new (<any>registration.component)(...dependencyInstances);\n    }\n}"]}